6th September, 2017 - Wednesday
                      
                                                                                                                           HIVE


-----> PARTITIONING OF DATA

1. Create partition table.
2. Set some partition properties
3 Load the data in partition table from an existing HIVE managed table.

----CREATING PARTITION TABLE ON txnsrecords table

(I) We are creating a partition table on Category (We have 15 categories here) - SINGLE BUCKET

a) First we will create a table
----------------------------------------------
create table txnrecsByCat(txnno INT, txndate STRING, custno INT, amount DOUBLE, product STRING, city STRING, state STRING, spendby
STRING)
partitioned by (category STRING)
row format delimited
fields terminated by ','
stored as textfile;


b) Now we set the properties by running the following commands-
--------------------------------------------------------------------------------------------
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.dynamic.partition=true;

c) Now we will load the data 
------------------------------------------ 
from txnrecords txn INSERT OVERWRITE TABLE txnrecsByCat PARTITION(category) select txn.txnno, txn.txndate, txn.custno, txn.amount,
txn.product, txn.city, txn.state, txn.spendby, txn.category DISTRIBUTE By category;

A new table called "txnrecordsbycat" would be created in the broswer directory where separate table for each category would be created

/user/hive/warehouse/niit.db   - This would give us the tables

Select 


-------> BUCKETING OF DATA

(II) We are creating a partition table on MONTH (multiple buckets)

a) We create a table
----------------------------
create table txnrecsByCat3(txnno INT, txndate STRING, custno INT, amount DOUBLE, product STRING, city STRING, state STRING, spendby
STRING)
partitioned by (month STRING)
row format delimited
fields terminated by ','
stored as textfile;

b)Set properties
---------------------
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.dynamic.partition=true;
set hive.exec.enforce.bucketing=true;

c)Load the data
----------------------

from txnrecords txn INSERT OVERWRITE TABLE txnrecsByCat3 PARTITION(month) select txn.txnno, txn.txndate, txn.custno, txn.amount,
txn.product, txn.city, txn.state, txn.spendby, txn.category, substring(txn.txndate,1,2) as month DISTRIBUTE By substring(txndate,1,2);




-----> CREATING PARTITION ON TWO COLUMNS/COMPOSITE PARTITIONING

a) Create table  being partitioned on category and spendby
-----------------------------------------------------------------------------------

create table txnrecsByCat4(txnno INT, txndate STRING, custno INT, amount DOUBLE, product STRING, city STRING, state STRING, spendby
STRING)
partitioned by (category STRING, spendby STRING)
row format delimited
fields terminated by ','
stored as textfile;
 
b) Set properties
-----------------------
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.dynamic.partition=true;
set hive.exec.enforce.bucketing=true;

c)Load data
------------------

from txnrecords txn INSERT OVERWRITE TABLE txnrecsByCat4 PARTITION(category,spendby) select txn.txnno, txn.txndate, txn.custno, txn.amount,
txn.product, txn.city, txn.state, txn.spendby, txn.category DISTRIBUTE By category,spendby;


-------> STATIC PARTITIONING

a) Create Table
---------------------
create table txnrecsByCat5 (txnno INT, txndate STRING, custno INT, amount DOUBLE, product STRING, city STRING, state STRING, spendby
STRING)
partition by (category STRING)
row format delimited
fields terminated by ','
stored as textfile;

b) Load data
------------------

from txnrecords txn INSERT OVERWRITE TABLE txnrecsByCat5 PARTITION(category='Gymnastics') select txn.txnno, txn.txndate, txn.custno, txn.amount,
txn.product, txn.city, txn.state, txn.spendby WHERE txn.category='Gymnastics'; 


from txnrecords txn INSERT OVERWRITE TABLE txnrecsByCat5 PARTITION(category='Team Sports') select txn.txnno, txn.txndate, txn.custno, txn.amount,
txn.product, txn.city, txn.state, txn.spendby WHERE txn.category='Team Sports'; 

